[{"path":[]},{"path":"/CodeofConduct.html","id":"id_1-purpose","dir":"","previous_headings":"","what":"1. Purpose","title":"Citizen Code of Conduct","text":"primary goal dod inclusive largest number contributors, varied diverse backgrounds possible. , committed providing friendly, safe welcoming environment , regardless gender, sexual orientation, ability, ethnicity, socioeconomic status, religion (lack thereof). code conduct outlines expectations participate community, well consequences unacceptable behavior. invite participate dod help us create safe positive experiences everyone.","code":""},{"path":"/CodeofConduct.html","id":"id_2-open-sourceculturetech-citizenship","dir":"","previous_headings":"","what":"2. Open [Source/Culture/Tech] Citizenship","title":"Citizen Code of Conduct","text":"supplemental goal Code Conduct increase open [source/culture/tech] citizenship encouraging participants recognize strengthen relationships actions effects community. Communities mirror societies exist positive action essential counteract many forms inequality abuses power exist society. see someone making extra effort ensure community welcoming, friendly, encourages participants contribute fullest extent, want know.","code":""},{"path":"/CodeofConduct.html","id":"id_3-expected-behavior","dir":"","previous_headings":"","what":"3. Expected Behavior","title":"Citizen Code of Conduct","text":"following behaviors expected requested community members: Participate authentic active way. , contribute health longevity community. Exercise consideration respect speech actions. Attempt collaboration conflict. Refrain demeaning, discriminatory, harassing behavior speech. mindful surroundings fellow participants. Alert community leaders notice dangerous situation, someone distress, violations Code Conduct, even seem inconsequential. Remember community event venues may shared members public; please respectful patrons locations.","code":""},{"path":"/CodeofConduct.html","id":"id_4-unacceptable-behavior","dir":"","previous_headings":"","what":"4. Unacceptable Behavior","title":"Citizen Code of Conduct","text":"following behaviors considered harassment unacceptable within community: Violence, threats violence violent language directed another person. Sexist, racist, homophobic, transphobic, ableist otherwise discriminatory jokes language. Posting displaying sexually explicit violent material. Posting threatening post people’s personally identifying information (“doxing”). Personal insults, particularly related gender, sexual orientation, race, religion, disability. Inappropriate photography recording. Inappropriate physical contact. someone’s consent touching . Unwelcome sexual attention. includes, sexualized comments jokes; inappropriate touching, groping, unwelcomed sexual advances. Deliberate intimidation, stalking following (online person). Advocating , encouraging, behavior. Sustained disruption community events, including talks presentations.","code":""},{"path":"/CodeofConduct.html","id":"id_5-weapons-policy","dir":"","previous_headings":"","what":"5. Weapons Policy","title":"Citizen Code of Conduct","text":"weapons allowed dod events, community spaces, spaces covered scope Code Conduct. Weapons include limited guns, explosives (including fireworks), large knives used hunting display, well item used purpose causing injury harm others. Anyone seen possession one items asked leave immediately, allowed return without weapon. Community members expected comply laws matter.","code":""},{"path":"/CodeofConduct.html","id":"id_6-consequences-of-unacceptable-behavior","dir":"","previous_headings":"","what":"6. Consequences of Unacceptable Behavior","title":"Citizen Code of Conduct","text":"Unacceptable behavior community member, including sponsors decision-making authority, tolerated. Anyone asked stop unacceptable behavior expected comply immediately. community member engages unacceptable behavior, community organizers may take action deem appropriate, including temporary ban permanent expulsion community without warning (without refund case paid event).","code":""},{"path":"/CodeofConduct.html","id":"id_7-reporting-guidelines","dir":"","previous_headings":"","what":"7. Reporting Guidelines","title":"Citizen Code of Conduct","text":"subject witness unacceptable behavior, concerns, please notify community organizer soon possible. jaimie.harbin@dfo-mpo.gc.ca Additionally, community organizers available help community members engage local law enforcement otherwise help experiencing unacceptable behavior feel safe. context -person events, organizers also provide escorts desired person experiencing distress.","code":""},{"path":"/CodeofConduct.html","id":"id_8-addressing-grievances","dir":"","previous_headings":"","what":"8. Addressing Grievances","title":"Citizen Code of Conduct","text":"feel falsely unfairly accused violating Code Conduct, notify us concise description grievance. grievance handled accordance existing governing policies.","code":""},{"path":"/CodeofConduct.html","id":"id_9-scope","dir":"","previous_headings":"","what":"9. Scope","title":"Citizen Code of Conduct","text":"expect community participants (contributors, paid otherwise; sponsors; guests) abide Code Conduct community venues–online -person–well one--one communications pertaining community business. code conduct related procedures also applies unacceptable behavior occurring outside scope community activities behavior potential adversely affect safety well-community members.","code":""},{"path":"/CodeofConduct.html","id":"id_10-contact-info","dir":"","previous_headings":"","what":"10. Contact info","title":"Citizen Code of Conduct","text":"annie.howard.e@gmail.com","code":""},{"path":"/CodeofConduct.html","id":"id_11-license-and-attribution","dir":"","previous_headings":"","what":"11. License and attribution","title":"Citizen Code of Conduct","text":"Citizen Code Conduct distributed Stumptown Syndicate Creative Commons Attribution-ShareAlike license. Portions text derived Django Code Conduct Geek Feminism Anti-Harassment Policy.","code":""},{"path":[]},{"path":"/CodeofConduct.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Citizen Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CodeofConduct.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Citizen Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CodeofConduct.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Citizen Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CodeofConduct.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Citizen Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CodeofConduct.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Citizen Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team dan.kelley@dal.ca. Complaints reviewed investigated result response deemed necessary appropriate circumstances. project team pledges maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CodeofConduct.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Citizen Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"/articles/buoy.html","id":"basics","dir":"Articles","previous_headings":"","what":"Basics","title":"Downloading buoy Data","text":"function dod.buoy can download buoy data Marine Environmental Data Section (MEDS).","code":""},{"path":"/articles/buoy.html","id":"finding-desired-id","dir":"Articles","previous_headings":"","what":"Finding Desired ID","title":"Downloading buoy Data","text":"dod.buoy, ID MEDS code region interest list , name region can given:","code":""},{"path":"/articles/buoy.html","id":"example-downloading-meds-data","dir":"Articles","previous_headings":"","what":"Example: Downloading MEDS Data","title":"Downloading buoy Data","text":"basic example shows download buoy data MEDS server.","code":"library(dod) dod.buoy(\"MEDS\", ID=\"East Scotian Slope\")"},{"path":"/articles/ctd.html","id":"basics","dir":"Articles","previous_headings":"","what":"Basics","title":"Downloading ctd Data","text":"function dod.ctd can download ctd data Bedford Basin Mooring Program (BBMP), Bermuda Atlantic Time Series (BATS), Global Temperature Salinity Program (GTSPP) etc calling respective functions dod.ctd.bbmp, dod.ctd.bats dod.ctd.gtspp.","code":""},{"path":[]},{"path":"/articles/ctd.html","id":"bbmp","dir":"Articles","previous_headings":"Finding Desired ID","what":"BBMP","title":"Downloading ctd Data","text":"dod.ctd.bbmp function, ID desired file index. index downloaded using dod.ctd function, provide file name index want download argument ID. eg ID= “D22667034.ODF”","code":""},{"path":"/articles/ctd.html","id":"gtspp","dir":"Articles","previous_headings":"Finding Desired ID","what":"GTSPP","title":"Downloading ctd Data","text":"GTSPP, ID 8 digits first two digits meaning ocean basin initial (, pa, ), next four digits meaning year interest last two month interest. eg attain data Atlantic January 1985 input: ID=“at198501”.","code":""},{"path":"/articles/ctd.html","id":"example-downloading-bbmp-data","dir":"Articles","previous_headings":"","what":"Example: Downloading BBMP Data","title":"Downloading ctd Data","text":"basic example shows download ctd index BBMP program year 2022 download, read plot first item index using oce package.","code":"library(dod) library(oce) index <- dod.ctd(\"BBMP\", 2022, index=TRUE, file=\"bbmp.txt\", read=TRUE) item <- index[1,\"file\"] file <- dod.ctd(program=\"BBMP\", year=2022, ID=item, file=\"bbmp.txt\", read=TRUE) plot(file)"},{"path":"/articles/dod_package.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Package Overview","text":"package created tool improve access various types oceanographic data open sources.","code":""},{"path":"/articles/dod_package.html","id":"oceanographic-data-options","dir":"Articles","previous_headings":"","what":"Oceanographic Data Options","title":"Package Overview","text":"following table shows types data package currently downloads functions used : Expansion options welcomed.","code":""},{"path":"/articles/dod_package.html","id":"development","dir":"Articles","previous_headings":"","what":"Development","title":"Package Overview","text":"Contributions dod package encouraged. basic structure function involves finding data source online use server containing many files constructing url function can download specific data. eg BATS, server url identified :","code":"server <- \"http://batsftp.bios.edu/BATS/ctd/ASCII/\" url <- paste0(server, \"b\",ID, \"_info.txt\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dan Kelley. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kelley D, Howard , Harbin J (2024). dod: Download Oceanographic Data. R package version 0.1.10, https://dankelley.github.io/dod/.","code":"@Manual{,   title = {dod: Download Oceanographic Data},   author = {Dan Kelley and Annie Howard and Jaimie Harbin},   year = {2024},   note = {R package version 0.1.10},   url = {https://dankelley.github.io/dod/}, }"},{"path":"/index.html","id":"dod","dir":"","previous_headings":"","what":"Download Oceanographic Data","title":"Download Oceanographic Data","text":"goal dod make easier download various types oceanographic data common sources BATS, NAOO, MEDS, BBMP. similar functions exist oce package, intention retire dod matures, building oce difficult users, CRAN policies dictate frequent updates.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Oceanographic Data","text":"can install development version dod GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dankelley/dod\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Download Oceanographic Data","text":"following example shows (1) download index ctd data files resulting observations made part BBMP program year 2022 (2) use functions oce package read plot first file index.","code":"# 1. Get index library(dod) indexFile <- dod.ctd(\"BBMP\", 2022, index=TRUE) index <- read.csv(indexFile, header=TRUE, skip=2) item <- index[1, \"FILE\"] # 2. Get the first file, and plot it file <- dod.ctd(\"BBMP\", 2022, item) library(oce) read.ctd(file) |> plot()"},{"path":"/reference/dod-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A package for downloading publically available data. — dod-package","title":"A package for downloading publically available data. — dod-package","text":"dod package provides tools downloading Advanced Microwave Scanning Radiometer (AMSR), buoy, coastline, CTD (BATS, BBMP, GTSPP), meteorological, tidal, topographic data.","code":""},{"path":[]},{"path":"/reference/dod.amsr.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"function downloads AMSR data.","code":""},{"path":"/reference/dod.amsr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"","code":"dod.amsr(   year = NULL,   month,   day,   destdir = \".\",   server = \"https://data.remss.com/amsr2/ocean/L3/v08.2\",   type = \"3day\",   debug = 0 )"},{"path":"/reference/dod.amsr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"year, month, day integer values indicating desired observation time. Set year NULL (default) default recent data; otherwise specify three values type \"3day\", \"daily\" \"weekly\", just first two type \"monthly\".  things provided, just match exactly values sought-file remote server.  year NULL, dod.amsr() constructs URL recent available file: 3 days prior present date (type \"3day\" \"daily\"), Saturday two weeks prior present date (type \"weekly\"), two months past (type \"monthly\"). destdir character giving destination directory (defaults \".\", present directory).  directory must exist.  (author uses \"~/data/amsr\".) server character value indicating base server location. default value used unless data provider changes web scheme ... case, hoped users contact developers package can updated. type character value indicating get data.  may \"3day\" (default), composite covering 3 days observation, removes viewing-path cloud blanks, \"daily\" daily reading, \"weekly\" composite covering week, \"monthly\" composite covering month.  \"daily\" case, data arrays 3D, third dimension representing ascending descending traces, cases, arrays 2D. debug integer giving debugging level (defaults 0, make function work without much output).","code":""},{"path":"/reference/dod.amsr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"dod.amsr returns character value holding full pathname downloaded file.","code":""},{"path":"/reference/dod.amsr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"works constructing URLs based arguments provided.  author unaware documentation specifies directory structure server, construction based examining server web browser.  Obviously, fragile approach lead failed downloads remote directory structure changes.  Indeed, dod.amsr() completely rewritten July 2023, previous version seen fail date.  Users asked report failed downloads encounter.  Careful inspection documentation year, month day , course, first step debugging errors.","code":""},{"path":"/reference/dod.amsr.html","id":"historical-note","dir":"Reference","previous_headings":"","what":"Historical note","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"July 2023, dod.amsr() worked calling download.amsr() oce package. However, time, author noticed changes directory structure remote server, format data files. new directory structure addressed complete rewrite code within dod, severing connection oce function.","code":""},{"path":"/reference/dod.amsr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"Dan Kelley","code":""},{"path":"/reference/dod.amsr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Advanced Microwave Scanning Radiometer data — dod.amsr","text":"","code":"# This example is not run because it downloads a 12Mb file. if (FALSE) { if (dir.exists(\"~/data/amsr\")) {     library(dod)     library(oce)     library(ncdf4)     file <- dod.amsr(destdir = \"~/data/amsr\")     nc <- nc_open(file)     lon <- ncvar_get(nc, \"lon\")     lat <- ncvar_get(nc, \"lat\")     SST <- ncvar_get(nc, \"SST\")     U <- ncvar_get(nc, \"wind_speed_AW\")     par(mfrow = c(2, 1))     imagep(lon, lat, SST, asp = 1, col = oceColorsTurbo, xaxs = \"i\")     mtext(\"SST [degC]\")     imagep(lon, lat, U, asp = 1, zlim = c(0, 15), col = oceColorsTurbo, xaxs = \"i\")     mtext(\"Wind [m/s]\")     nc_close(nc) } }"},{"path":"/reference/dod.buoy.html","id":null,"dir":"Reference","previous_headings":"","what":"Download buoy data — dod.buoy","title":"Download buoy data — dod.buoy","text":"function downloads buoy data various programs including...","code":""},{"path":"/reference/dod.buoy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download buoy data — dod.buoy","text":"","code":"dod.buoy(program, ID = NULL, destdir = \".\", age = age, debug = 0)"},{"path":"/reference/dod.buoy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download buoy data — dod.buoy","text":"program argument specifying desired oceanographic program download buoy data . supplied, dod.buoy() print list possibilities. ID character value indicating ID instrument. destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.buoy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download buoy data — dod.buoy","text":"index TRUE, program \"BBMP\" \"BATS\", return data frame.  Otherwise, return name downloaded file.","code":""},{"path":"/reference/dod.buoy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download buoy data — dod.buoy","text":"Dan Kelley","code":""},{"path":"/reference/dod.buoy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download buoy data — dod.buoy","text":"","code":"# Significant wave height measured by a buoy in Halifax Harbour library(dod) tmpdir <- tempfile() print(tmpdir) #> [1] \"/var/folders/8b/l4h64m1j22v5pb7vj049ff140000gn/T//RtmpNHftnq/file10b1956c7ba71\" dir.create(tmpdir) file <- dod.buoy(\"smartatlantic\", \"h1\", destdir = tmpdir) col.names <- strsplit(readLines(file, 1), \",\")[[1]] d <- read.csv(file, skip = 2, col.names = col.names) d$t <- as.POSIXct(d$time, tz = \"UTC\", format = \"%Y-%m-%dT%H:%M:%SZ\") plot(d$t, d$wave_ht_sig, type = \"l\",     xlab = \"\", ylab = \"Sig. Wave Ht. [m]\" )  unlink(tmpdir, recursive = TRUE)"},{"path":"/reference/dod.coastline.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a coastline File — dod.coastline","title":"Download a coastline File — dod.coastline","text":"Constructs query NaturalEarth server (see reference 1) download coastline data (lake data, river data, etc) three resolutions.","code":""},{"path":"/reference/dod.coastline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a coastline File — dod.coastline","text":"","code":"dod.coastline(   resolution,   item = \"coastline\",   destdir = \".\",   destfile,   server = \"naturalearth\",   debug = 0 )"},{"path":"/reference/dod.coastline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a coastline File — dod.coastline","text":"resolution character value specifying desired resolution. permitted choices \"10m\" (1:10M resolution, detailed), \"50m\" (1:50M resolution) \"110m\" (1:110M resolution). resolution supplied, \"50m\" used. item character value indicating quantity downloaded. normally one \"coastline\", \"land\", \"ocean\", \"rivers_lakes_centerlines\", \"lakes\", NaturalEarth server types, advanced users can discover names inspecting URLs links NaturalEarth site, use item. item supplied, defaults \"coastline\". destdir character value indicating directory store downloaded files. destfile optional name destination file. provided, function creates reasonable name. server character value specifying server supply data. moment, permitted value \"naturalearth\", default server supplied. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.coastline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a coastline File — dod.coastline","text":"character value indicating filename result; problem kind, result empty string.","code":""},{"path":"/reference/dod.coastline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download a coastline File — dod.coastline","text":"NaturalEarth server https://www.naturalearthdata.com","code":""},{"path":[]},{"path":"/reference/dod.coastline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download a coastline File — dod.coastline","text":"Dan Kelley","code":""},{"path":"/reference/dod.coastline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a coastline File — dod.coastline","text":"","code":"if (FALSE) { library(oce) # User must create directory ~/data/coastline first. # As of September 2016, the downloaded file, named # \"ne_50m_coastline.zip\", occupies 443K bytes. filename <- dod.coastline(destdir = \"~/data/coastline\") coastline <- read.coastline(filename) plot(coastline) }"},{"path":"/reference/dod.ctd.bats.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CTD data from the Bermuda Atlantic Time Series program — dod.ctd.bats","title":"Download CTD data from the Bermuda Atlantic Time Series program — dod.ctd.bats","text":"dod.ctd.bats() downloads CTD data Bermuda Atlantic Time Series (BATS) server, http://batsftp.bios.edu/BATS/ctd/ASCII/.  Note server provide index, users need visit website determine IDs interest, unless already know . Another problem data nonstandard format oce package read, user may wish write code reframe data shown ‘Examples’ section.","code":""},{"path":"/reference/dod.ctd.bats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CTD data from the Bermuda Atlantic Time Series program — dod.ctd.bats","text":"","code":"dod.ctd.bats(ID, info = FALSE, file = NULL, destdir = \".\", age = 0, debug = 0)"},{"path":"/reference/dod.ctd.bats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CTD data from the Bermuda Atlantic Time Series program — dod.ctd.bats","text":"ID integer specifying ID file interest. gets expanded e.g. URL/b(ID)_ctd.txt URL/b(ID)_ctd_QC.txt info FALSE, URL/b(ID)_info.txt otherwise. info logical value.  info FALSE, default, dod.ctd.bats() downloads actual CTD data.  Alternatively, downloads file holding information sampling location, etc. file character value giving name used downloaded file.  file NULL, default, filename server used. destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.ctd.bats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CTD data from the Bermuda Atlantic Time Series program — dod.ctd.bats","text":"dod.ctd.bats() returns full pathname downloaded file.","code":""},{"path":[]},{"path":"/reference/dod.ctd.bats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download CTD data from the Bermuda Atlantic Time Series program — dod.ctd.bats","text":"","code":"if (FALSE) { library(dod) # Read info file infoFile <- dod.ctd.bats(ID = 10001, info = TRUE) info.names <- c(     \"ID\",     \"dateDeployed\", \"dateRecovered\", \"decimalDateDeployed\", \"decimalDateRecovered\",     \"decimalDayDeployed\", \"timeDeployed\", \"timeRecovered\", \"latitudeDeployed\",     \"latitudeRecovered\", \"longitudeDeployed\", \"longitudeRecovered\" ) info <- read.delim(infoFile, sep = \"\\t\", header = FALSE, col.names = info.names)  # Read data file dataFile <- dod.ctd.bats(ID = 10001) dataNames <- c(     \"ID\", \"date\", \"latitude\", \"longitude\",     \"pressure\", \"depth\", \"temperature\", \"conductivity\", \"salinity\", \"oxygen\",     \"beamAttenuationCoefficient\", \"fluorescence\", \"PAR\" ) data <- read.delim(dataFile, sep = \"\\t\", header = FALSE, col.names = dataNames)  # Use oce to construct a basic CTD object (using just some of the data), # and then to summarize and plot it.  Note that longitude in these files # is in degrees west, so they must be negated for use in oce. library(oce) time <- as.POSIXct(paste(info$dateDeployed, info$timeDeployed), format = \"%Y%m%d %H%M\") ctd <- as.ctd(     salinity = data$salinity, temperature = data$temperature,     pressure = data$pressure, latitude = data$latitude[1],     longitude = -data$longitude[1], time = time ) # Add some extra things that are in at least some file. Units can also be added, # if known. for (item in c(\"oxygen\", \"beamAttenuationCoefficient\", \"fluorescence\", \"PAR\")) {     ctd <- oceSetData(ctd, item, data[[item]]) } summary(ctd) plot(ctd) }"},{"path":"/reference/dod.ctd.bbmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CTD data from the Bedford Basin Mooring Project — dod.ctd.bbmp","title":"Download CTD data from the Bedford Basin Mooring Project — dod.ctd.bbmp","text":"dod.ctd.bbmp can retrieve index files data files Bedford Basin Mooring Project (BBMP). Since naming convention data files may alter year year, important start downloading index first, ascertain name file interest; see ‘Examples’.","code":""},{"path":"/reference/dod.ctd.bbmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CTD data from the Bedford Basin Mooring Project — dod.ctd.bbmp","text":"","code":"dod.ctd.bbmp(   year,   ID = NULL,   index = FALSE,   file = NULL,   destdir = \".\",   age = 0,   debug = 0 )"},{"path":"/reference/dod.ctd.bbmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CTD data from the Bedford Basin Mooring Project — dod.ctd.bbmp","text":"year numeric character value specifying year interest. provided, defaults current year. ID character value specifying file interest copied index. index boolean value. TRUE, dod.ctd.bbmp downloads index file provides names files containing CTD data along sampling dates.  value ID ignored case. contrast, index FALSE, dod.ctd.bbmp downloads CTD file specified ID.  See ‘Examples’. file character value giving name used downloaded file.  NULL (default) filename remote data server. destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.ctd.bbmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CTD data from the Bedford Basin Mooring Project — dod.ctd.bbmp","text":"dod.ctd.bbmp returns character value naming file retrieved. may either index file data file; see ‘Examples’ section example typical workflow.","code":""},{"path":[]},{"path":"/reference/dod.ctd.bbmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download CTD data from the Bedford Basin Mooring Project — dod.ctd.bbmp","text":"","code":"if (FALSE) { # Download and study this year's first BBMP CTD file library(dod) # Download and read the index indexFile <- dod.ctd(\"BBMP\", index = TRUE) index <- read.csv(indexFile, header = FALSE, col.names = c(\"file\", \"time\"), skip = 3) # Download the first file in the index ctdFile <- dod.ctd(\"BBMP\", ID = index$file[1]) # Use oce to read, summarize and plot the data. library(oce) ctd <- read.oce(ctdFile) summary(ctd) plot(ctd) }"},{"path":"/reference/dod.ctd.gtspp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CTD data from the GTSPP server — dod.ctd.gtspp","title":"Download CTD data from the GTSPP server — dod.ctd.gtspp","text":"function downloads CTD data GRSPP server https://www.ncei.noaa.gov/data/oceans/gtspp/bestcopy/. website somewhat challenging use; see ‘Details’.","code":""},{"path":"/reference/dod.ctd.gtspp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CTD data from the GTSPP server — dod.ctd.gtspp","text":"","code":"dod.ctd.gtspp(   basin,   year,   month,   file = NULL,   destdir = \".\",   index = FALSE,   nc = NULL,   age = 0,   debug = 0 )"},{"path":"/reference/dod.ctd.gtspp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CTD data from the GTSPP server — dod.ctd.gtspp","text":"basin character value indicating ocean basin data acquired.  must one \"\", \"pa\" \"\", Atlantic, Pacific Indian basins, respectively. NB. basin ignored nc #' provided, full URL. year integer value giving year data acquired. NB. year ignored nc #' provided, full URL. month integer value giving month data acquired. character form, two-digit value required, first digit \"0\" early months year. NB. month ignored nc #' provided, full URL. file character value giving name used downloaded file. destdir character value indicating directory store downloaded files. index boolean value indicating whether index downloaded. FALSE default. Note nc ignored index TRUE. NB. index ignored nc #' provided, full URL. nc character value either naming netcdf file directory inferred basin, year month, URL leads directly file.  latter case recognized nc starting \"http\". Note index ignored nc provided.  See “Examples”. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.ctd.gtspp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CTD data from the GTSPP server — dod.ctd.gtspp","text":"dod.ctd.gtspp() returns local name downloaded file.","code":""},{"path":"/reference/dod.ctd.gtspp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download CTD data from the GTSPP server — dod.ctd.gtspp","text":".zip files provided NCEI server readible macOS machine, might also indicate problems machines.  Therefore, inventory files read .txt format, increases download read time order magnitude.","code":""},{"path":[]},{"path":"/reference/dod.ctd.gtspp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download CTD data from the GTSPP server — dod.ctd.gtspp","text":"","code":"if (FALSE) { # Two examples are shown here.  The first specifies the remote file by a full # URL, and the second infers such a URL from a subset of an index file. Since # downloading an index is slow, a common approach is to combine the approaches, # re-downloading the index perhaps only once a week to gain access to the most # recent data.  library(dod) library(oce) library(ocedata) library(ncdf4)  # First, define a function to read, summarize and plot CTD # data stored in a netcdf file. process <- function(datafile) {     nc <- nc_open(datafile)     S <- ncvar_get(nc, \"salinity\")     T <- ncvar_get(nc, \"temperature\")     z <- ncvar_get(nc, \"z\")     lon <- ncvar_get(nc, \"longitude\")     lat <- ncvar_get(nc, \"latitude\")     p <- swPressure(z, lat)     ctd <- as.ctd(S, T, p, longitude = lon, latitude = lat)     summary(ctd)     plot(ctd) }  # Example A: get a data file from a known URL. url <- paste0(     \"https://www.ncei.noaa.gov/data/oceans/\",     \"gtspp/bestcopy/atlantic/2022/01/gtspp_47477452_te_111.nc\" ) dataFileA <- dod.ctd.gtspp(nc = url) # above is equivalent to dod.ctd(\"at\", 2022, 01, nc=\"gtspp_47477452_te_111.nc\") process(dataFileA)  # Example B: get an index, find a file of interest, and then get it # Get an index file for Atlantic Ocean observations in January 2022. indexFile <- dod.ctd.gtspp(basin = \"at\", year = 2022, month = 1, index = TRUE) col.names <- strsplit(gsub(\"#\", \"\", readLines(indexFile, n = 1L)), \",\")[[1]] index <- read.csv(indexFile, skip = 1L, col.names = col.names, header = FALSE) # Plot sampling locations near Halifax, Nova Scotia data(coastlineWorldFine, package = \"ocedata\") hlon <- -63.5728 hlat <- 44.6476 plot(coastlineWorldFine, clongitude = hlon, clatitude = hlat, span = 2000) points(index$longitude, index$latitude, col = 4) # Focus on the point nearest Halifax dist <- geodDist(index$longitude, index$latitude, hlon, hlat) focus <- index[which.min(dist), ] dataFile <- dod.ctd.gtspp(nc = focus$data_URL) process(dataFile) }"},{"path":"/reference/dod.ctd.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CTD data — dod.ctd","title":"Download CTD data — dod.ctd","text":"function downloads CTD data various programs.","code":""},{"path":"/reference/dod.ctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CTD data — dod.ctd","text":"","code":"dod.ctd(program = NULL, ...)"},{"path":"/reference/dod.ctd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CTD data — dod.ctd","text":"program character value naming program (one listthem). ... extra arguments passed dod.ctd.bats(), dod.ctd.bbmp() dod.ctd.gtspp().","code":""},{"path":[]},{"path":"/reference/dod.ctd.itp.html","id":null,"dir":"Reference","previous_headings":"","what":"Download CTD data from the Ice-Tethered Profiler program — dod.ctd.itp","title":"Download CTD data from the Ice-Tethered Profiler program — dod.ctd.itp","text":"dod.ctd.itp() downloads CTD data Woods Hole Oceanographic Institutions Ice-Thethered Profile program https://www2.whoi.edu/site/itp/.  Note server provide searchable index, users need visit website https://www2.whoi.edu/site/itp/data/ determine IDs interest.","code":""},{"path":"/reference/dod.ctd.itp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download CTD data from the Ice-Tethered Profiler program — dod.ctd.itp","text":"","code":"dod.ctd.itp(ID, info = FALSE, file = NULL, destdir = \".\", age = 0, debug = 0)"},{"path":"/reference/dod.ctd.itp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download CTD data from the Ice-Tethered Profiler program — dod.ctd.itp","text":"ID integer specifying ID profiler interest. info logical value.  info FALSE, default, dod.ctd.itp() downloads zip-format file can expanded directory holds data file profile made profiler given ID.  name zip file returned. (file must unzipped access data; unzip() convenient way .) hand, info TRUE, nothing downloaded, dod.ctd.itp() returns URL holding information profiler. file character value giving name used downloaded file.  file NULL, default, filename server used. destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.ctd.itp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download CTD data from the Ice-Tethered Profiler program — dod.ctd.itp","text":"dod.ctd.itp() returns full pathname downloaded zip file, URL information site, depending value info.","code":""},{"path":[]},{"path":"/reference/dod.ctd.itp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download CTD data from the Ice-Tethered Profiler program — dod.ctd.itp","text":"Dan Kelley","code":""},{"path":"/reference/dod.download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file with error checking — dod.download","title":"Download a file with error checking — dod.download","text":"dod.download() mainly intended use functions dod package.","code":""},{"path":"/reference/dod.download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file with error checking — dod.download","text":"","code":"dod.download(   url = NULL,   file = NULL,   destdir = \".\",   age = 0,   silent = TRUE,   debug = 0 )"},{"path":"/reference/dod.download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file with error checking — dod.download","text":"url character value giving web address file downloaded. different values different file types. file character value giving name used downloaded file. destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. silent logical value passed download.file(), downloading.  default, TRUE, indicates show progress indicator. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a file with error checking — dod.download","text":"dod.download returns character value holding full name file, including path destdir.","code":""},{"path":"/reference/dod.html","id":null,"dir":"Reference","previous_headings":"","what":"A package for downloading publically available data. — dod","title":"A package for downloading publically available data. — dod","text":"dod package provides tools downloading Advanced Microwave Scanning Radiometer (AMSR), buoy, coastline, CTD (BATS, BBMP, GTSPP), meteorological, tidal, topographic data.","code":""},{"path":[]},{"path":"/reference/dod.met.html","id":null,"dir":"Reference","previous_headings":"","what":"Download meteorological timeseries data — dod.met","title":"Download meteorological timeseries data — dod.met","text":"dod.met() attempts download data Environment Canada's historical-data website, cache files locally. Lacking published API, function must rely reverse-engineering queries handled web server.  reason, brittle.","code":""},{"path":"/reference/dod.met.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download meteorological timeseries data — dod.met","text":"","code":"dod.met(   id,   year,   month,   deltat,   type = \"xml\",   destdir = \".\",   destfile,   age = 0,   quiet = FALSE,   debug = 0 )"},{"path":"/reference/dod.met.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download meteorological timeseries data — dod.met","text":"id number giving \"Station ID\" station interest. provided, id defaults 43405, Halifax Dockyard. (Previously, default 6358, Halifax International Airport, March 2024 noticed 6358 held data.) See “Details”. year number giving year interest. Ignored unless deltat \"hour\". year given, defaults present year. month number giving month interest. Ignored unless deltat \"hour\". month given, defaults present month. deltat Optional character string indicating time step desired dataset. may \"hour\" \"month\". deltat given, defaults \"hour\". type String indicating type file download, either \"xml\" (default) XML file \"csv\" CSV file. destdir character value indicating directory store downloaded files. destfile optional name destination file. provided, function creates reasonable name. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. quiet Logical value passed download.file(); TRUE value silences output. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.met.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download meteorological timeseries data — dod.met","text":"dod.met() returns character value holding full pathname downloaded file.","code":""},{"path":"/reference/dod.met.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download meteorological timeseries data — dod.met","text":"function fails, users might try using Gavin Simpson's canadaHCD package (reference 2). package maintains copy Environment Canada listing stations, find_station() function provides easy way determine Station IDs.  , hcd_hourly function (related functions) make easy read data. data can converted met class .met() oce package, although leaves many important metadata blank.","code":""},{"path":"/reference/dod.met.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download meteorological timeseries data — dod.met","text":"Environment Canada website Historical Climate Data https://climate.weather.gc.ca/index_e.html Gavin Simpson's canadaHCD package GitHub https://github.com/gavinsimpson/canadaHCD","code":""},{"path":[]},{"path":"/reference/dod.met.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download meteorological timeseries data — dod.met","text":"Dan Kelley","code":""},{"path":"/reference/dod.met.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download meteorological timeseries data — dod.met","text":"","code":"if (FALSE) { library(dod) # Download data for Halifax International Airport, in September # of 2003. This dataset is used for data(met) provided with oce. # Note that requests for data after 2012 month 10 yield all # missing values, for reasons unknown to the author. metFile <- dod.met(43405, 2024, 3, destdir = \".\") }"},{"path":"/reference/dod.met.sounding.html","id":null,"dir":"Reference","previous_headings":"","what":"Download sounding data — dod.met.sounding","title":"Download sounding data — dod.met.sounding","text":"Download atmospheric sounding file University Wyoming Department Atmospheric science website https://weather.uwyo.edu/upperair/sounding.html.","code":""},{"path":"/reference/dod.met.sounding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download sounding data — dod.met.sounding","text":"","code":"dod.met.sounding(   station = \"73110\",   year,   month,   day,   region = \"naconf\",   destdir = \".\",   age = 0,   debug = 0 )"},{"path":"/reference/dod.met.sounding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download sounding data — dod.met.sounding","text":"station character value indicating station identifier.  default station near Halifax, Nova Scotia. year integer character value indicating year.  supplied, present year used. month integer character value indicating month. supplied, present month used. day integer character value indicating day supplied, present day used. region character value indicating region. example, stations north America seem associated region \"naconf\" (default). destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.met.sounding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download sounding data — dod.met.sounding","text":"local name downloaded file.","code":""},{"path":"/reference/dod.met.sounding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download sounding data — dod.met.sounding","text":"","code":"if (FALSE) { # Download tempdir <- tempfile() dir.create(tempdir) station <- \"73110\" year <- \"2023\" month <- \"01\" day <- \"08\" file <- dod.met.sounding(station, year = year, month = month, day = day, destdir = tempdir) # Read data, extracting the table crudely. lines <- readLines(file) start <- grep(\"<PRE>\", lines)[1] end <- grep(\"<\/PRE>\", lines)[1] table <- lines[seq(start + 5, end - 1)] col.names <- strsplit(gsub(\"^ [ ]*\", \"\", lines[start + 2]), \"[ ]+\")[[1]] # Must read in fixed-width format because missing data are blanked out data <- read.fwf(     file = textConnection(table),     widths = rep(7, 11), col.names = col.names ) # Plot mixing ratio variation with height plot(data$MIXR, data$HGHT,     type = \"l\", cex = 0.5, pch = 20, col = 4,     xlab = \"Mixing Ratio\", ylab = \"Height [m]\" ) unlink(tempdir, recursive = TRUE) }"},{"path":"/reference/dod.tideGauge.html","id":null,"dir":"Reference","previous_headings":"","what":"Download tide-gauge data — dod.tideGauge","title":"Download tide-gauge data — dod.tideGauge","text":"dod.tideGauge() downloads tide-gauge data either Canadian (CHS) American (NOAA) tide gauges.","code":""},{"path":"/reference/dod.tideGauge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download tide-gauge data — dod.tideGauge","text":"","code":"dod.tideGauge(   ID = NULL,   variable = \"water_level\",   agency = \"CHS\",   start = NULL,   end = NULL,   resolution = NULL,   file = NULL,   destdir = \".\",   age = 0,   debug = 0 )"},{"path":"/reference/dod.tideGauge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download tide-gauge data — dod.tideGauge","text":"ID character (possibly integer) value specifying numeric identifier tide gauge. Canadian data, either station number station name (e.g. number 491 corresponds \"Bedford Institute\" station).  American data, numerical code. variable character value indicating name variable downloaded.  defaults \"water_level\" observed water level (called \"wlo\" CHS server \"water_level\" NOAA server). Another permitted choice \"predictions\" (called \"wlp\"CHS \"predictions\"NOAA). either two cases,timeandQCare also stored alongside variable.  third case: ifvariableis\"metadata\"`, file saved; instead, return value list containing information station, code number, official name, datum, etc. agency character value indicating agency data sought. Use \"CHS\" Canadian tide gauges (default), \"NOAA\"` American tide gauges. start, end POSIXt times character values can converted times (via .POSIXct() tz=\"UTC\") indicate time interval requested data.  end specified, present time used.  start provided, set present time minus 7 days.  start numeric value, interpreted number days go back time end time. resolution character value indicating resolution, used agency \"CHS\".  choices \"ONE_MINUTE\", \"THREE_MINUTES\"(default),\"FIVE_MINUTES\", \"FIFTEEN_MINUTES\", \"SIXTY_MINUTES\".  server website indicates \"resolution available every station every time series.\"` also indicates \"time frame available increases resolution, equal week (7 days) multiplied resolution, maximum available 31 days. (month)\".  second statement perhaps means possible download 1 week data 1-minute resolution. file character value indicating name used downloaded data.  provided, constructed e.g. \"tide_A_N_S_E_R_V.csv\" value agency argument, N station ID number, S E start end dates written 8-digit format (.e. sans \"-\" characters), R resolution minutes, V variable name. destdir character value indicating directory store downloaded files. age numerical value indicating time interval, days. file downloaded server already exists locally, created less age days past, downloaded .  Setting age=0 (default) forces download, existing files always updated. contrast, setting age negative number prevents updating files already exist locally. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.tideGauge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download tide-gauge data — dod.tideGauge","text":"dod.tideGauge() returns list, value \"metadata\" agency \"CHS\"; otherwise returns file name (full path included).  CHS case constructed filename, since CHS server provides data, files.  NOAA case, downloaded file.","code":""},{"path":"/reference/dod.tideGauge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download tide-gauge data — dod.tideGauge","text":"Downloads done either Canadian Hydrographic Service (CHS) American National Oceanographic Atmospheric Agency (NOAA), respectively (see References 1 2). resultant data saved either constructed filenames, filenames provided user; either case, recent file already exists indicated name, data downloaded. NOAA files, water level predictions provided time sequence, CHS files, case, e.g. predictions (author's tests) 15 minute intervals, starting hour marker, observations may variety times, depending start end.  Therefore, numerical comparision CHS data require interpolation (see ‘Examples’).","code":""},{"path":"/reference/dod.tideGauge.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download tide-gauge data — dod.tideGauge","text":"https://api-iwls.dfo-mpo.gc.ca/swagger-ui/index.html https://api.tidesandcurrents.noaa.gov/api/prod/datagetter","code":""},{"path":"/reference/dod.tideGauge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download tide-gauge data — dod.tideGauge","text":"","code":"if (FALSE) { library(dod) library(oce) ofile <- dod.tideGauge(491) pfile <- dod.tideGauge(491, \"predictions\") O <- read.csv(ofile) O$time <- as.POSIXct(O$Date.Time, tz = \"UTC\") P <- read.csv(pfile) P$time <- as.POSIXct(P$Date.Time, tz = \"UTC\") # Top panel: observation (black) and prediction (gray) par(mfrow = c(2, 1)) oce.plot.ts(O$time, O$Water.Level, ylab = \"Water Level [m]\") lines(P$time, P$Predictions, col = \"gray\", type = \"l\") # Bottom panel: misfit. Note the interpolation to observation time. misfit <- O$Water.Level - approx(P$time, P$Predictions, O$time)$y oce.plot.ts(O$time, misfit, ylab = \"Deviation [m]\") }"},{"path":"/reference/dod.topo.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Cache a topo File — dod.topo","title":"Download and Cache a topo File — dod.topo","text":"Topographic data downloaded data server holds ETOPO1 dataset (Amante, C. B.W. Eakins, 2009), saved netCDF file whose name specifies data request, file name already present local file system.  return value name data file, typical use filename call read.topo() oce package. Given rules file naming, subsequent calls dod.topo() identical parameters simply return name cached file, assuming user deleted meantime.  Note dod.topo() uses \"terra\" \"ncdf4\" packages, error reported available.","code":""},{"path":"/reference/dod.topo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Cache a topo File — dod.topo","text":"","code":"dod.topo(   west,   east,   south,   north,   resolution = 4,   destdir = \".\",   destfile,   server = \"https://gis.ngdc.noaa.gov\",   debug = getOption(\"dodDebug\", 0L) )"},{"path":"/reference/dod.topo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Cache a topo File — dod.topo","text":"west, east numeric values limits data-selection box, degrees. converted -180 180 degree notation, needed. , west rounded nearest 1/100th degree, east rounded nearest 1/100th degree. results operations used constructing query NOAA data server. south, north latitude limits, treated way corresponds longitude limits. resolution numeric value grid spacing, geographical minutes. default value 4 minutes, corresponding 4 nautical miles (approx. 7.4km) north-south direction, less east-west direction. destdir character value indicating directory store downloaded files. destfile optional name destination file. provided, function creates reasonable name. server character value specifying base download URL constructed.  unlikely value default work, unless similarly-constructed mirrored site. debug integer value indicating level debugging. exceeds 0, debugging messages printed. value passed related functions, 1 subtracted pass.","code":""},{"path":"/reference/dod.topo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Cache a topo File — dod.topo","text":"String indicating full pathname downloaded file.","code":""},{"path":"/reference/dod.topo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Cache a topo File — dod.topo","text":"specified longitude latitude limits rounded 2 digits (corresponding footprint approximately 1km), used server request. resultant request generate 1 row column result, dod.topo() generates error message stops.","code":""},{"path":"/reference/dod.topo.html","id":"historical-note-relating-to-noaa-server-changes","dir":"Reference","previous_headings":"","what":"Historical note relating to NOAA server changes","title":"Download and Cache a topo File — dod.topo","text":"2022 November 13: updated new NOAA database, 1/4-minute resolution (marked improvement previous 1-minute resolution).  revision framed along similar changes marmap::getNOAAbathy() made earlier today. Thanks Clark Richards pointing ! 2020 May 31: updated change NOAA query structure, taking hints marmap::getNOAAbathy().","code":""},{"path":"/reference/dod.topo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download and Cache a topo File — dod.topo","text":"Amante, C. B.W. Eakins, 2009. ETOPO1 1 Arc-Minute Global Relief Model: Procedures, Data Sources Analysis. NOAA Technical Memorandum NESDIS NGDC-24. National Geophysical Data Center, NOAA. doi:10.7289/V5C8276M","code":""},{"path":[]},{"path":"/reference/dod.topo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and Cache a topo File — dod.topo","text":"Dan Kelley","code":""},{"path":"/reference/dod.topo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Cache a topo File — dod.topo","text":"","code":"if (FALSE) { library(oce) topoFile <- dod.topo(     west = -66, east = -60, south = 43, north = 47,     resolution = 1, destdir = \"~/data/topo\" ) topo <- read.topo(topoFile) imagep(topo, zlim = c(-400, 400), col = oceColorsTwo, drawTriangles = TRUE) if (requireNamespace(\"ocedata\", quietly = TRUE)) {     data(coastlineWorldFine, package = \"ocedata\")     lines(coastlineWorldFine[[\"longitude\"]], coastlineWorldFine[[\"latitude\"]]) } }"},{"path":"/reference/dodDebug.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug dod package functions — dodDebug","title":"Debug dod package functions — dodDebug","text":"function used throughout dod package provide information processing done.","code":""},{"path":"/reference/dodDebug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug dod package functions — dodDebug","text":"","code":"dodDebug(debug = 0, ...)"},{"path":"/reference/dodDebug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Debug dod package functions — dodDebug","text":"debug integer valaue indicating level debugging. exceeds zero, ... passed cat(), printing. ... content passed cat().","code":""},{"path":"/news/index.html","id":"dod-0110","dir":"Changelog","previous_headings":"","what":"dod 0.1.10","title":"dod 0.1.10","text":"Change dod.buoy() handle h1 buoy smartatlantic program.","code":""},{"path":"/news/index.html","id":"dod-019","dir":"Changelog","previous_headings":"","what":"dod 0.1.9","title":"dod 0.1.9","text":"Change dod.met() default station 43405, since 2024-03-16 noticed older default longer held data.","code":""},{"path":"/news/index.html","id":"dod-018","dir":"Changelog","previous_headings":"","what":"dod 0.1.8","title":"dod 0.1.8","text":"Change dod.tideGauge() accept number start.","code":""},{"path":"/news/index.html","id":"dod-017","dir":"Changelog","previous_headings":"","what":"dod 0.1.7","title":"dod 0.1.7","text":"Add dod.ctd.itp().","code":""},{"path":"/news/index.html","id":"dod-016","dir":"Changelog","previous_headings":"","what":"dod 0.1.6","title":"dod 0.1.6","text":"Change dod.tideGauge() handle CHS NOAA downloads. links oce package removed, avoid circular dependencies.","code":""},{"path":"/news/index.html","id":"dod-015","dir":"Changelog","previous_headings":"","what":"dod 0.1.5","title":"dod 0.1.5","text":"dod.tideGauge() added.","code":""},{"path":"/news/index.html","id":"dod-014","dir":"Changelog","previous_headings":"","what":"dod 0.1.4","title":"dod 0.1.4","text":"Move project github.com/dankelley/dod dod.amsr() improvements.","code":""},{"path":"/news/index.html","id":"dod-013","dir":"Changelog","previous_headings":"","what":"dod 0.1.3","title":"dod 0.1.3","text":"dod.amsr() now local, opposed call oce::download.amsr(). also changed major ways, data provider altered directory structure data format. , see https://github.com/dankelley/oce/issues/2124.","code":""},{"path":"/news/index.html","id":"dod-012","dir":"Changelog","previous_headings":"","what":"dod 0.1.2","title":"dod 0.1.2","text":"Add age argument functions download.","code":""},{"path":"/news/index.html","id":"dod-011","dir":"Changelog","previous_headings":"","what":"dod 0.1.1","title":"dod 0.1.1","text":"Add dod.met.sounding().","code":""},{"path":"/news/index.html","id":"dod-010","dir":"Changelog","previous_headings":"","what":"dod 0.1.0","title":"dod 0.1.0","text":"Initial version","code":""}]
